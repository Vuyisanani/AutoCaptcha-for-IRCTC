keys = {
    "A": [
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0],
    [0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]
    ],
    "D": [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0]
    ],
    "E": [
    [1,1,1,1,1,1,1,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1]
    ],
    "F": [
    [1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0]
    ],
    "H": [
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1]
    ],
    "J": [
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,0,0,0]
    ],
    "K": [
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0],
    [1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1]
    ],
    "L": [
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1]
    ],
    "M": [
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [1,1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1],
    [1,1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1],
    [1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1],
    [1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1],
    [1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1],
    [1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1],
    [1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1],
    [1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1],
    [1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1]
    ],
    "N": [
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1]
    ],
    "P": [
    [1,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,0],
    [1,1,1,0,0,0,1,1,1,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,1,1,1,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0]
    ],
    "Q": [
    [0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0],
    [0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
    [0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0]
    ],
    "R": [
    [1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0],
    [1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0],
    [1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1]
    ],
    "T": [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0]
    ],
    "U": [
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
    [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0]
    ],
    "X": [
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0],
    [0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0],
    [0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0],
    [0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1]
    ],
    "Y": [
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0],
    [0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0],
    [0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0]
    ],
    "3": [
    [1,1,1,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,0,1,1,1,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,0,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,0,0,0,1,1,1,1,1,1,1,0,0],
    [0,0,1,1,1,1,1,1,1,0,0,0,0],
    [0,0,1,1,1,1,1,1,1,1,1,0,0],
    [0,0,0,0,1,1,1,1,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,0,0,1,1,1,1,1,1,0],
    [1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0]
    ],
    "4": [
    [0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0],
    [0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,0],
    [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0],
    [0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0],
    [0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0],
    [0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0]
    ],
    "6": [
    [0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0],
    [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0],
    [0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
    [1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],
    [0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0],
    [0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
    [0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0],
    [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0]
    ],
    "7": [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,0,1,1,1,0,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,1,1,1,1,0,0,0,0],
    [0,0,0,0,0,0,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,1,1,1,1,0,0,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,0,1,1,1,1,0,0,0,0,0,0],
    [0,0,0,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,0,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,0,1,1,1,1,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,0,0,0,0,0,0,0,0,0]
    ],
    "9": [
    [0,0,0,1,1,1,1,1,1,1,1,0,0,0,0],
    [0,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,0,1,1,1,1,1,1,0,0],
    [1,1,1,1,0,0,0,0,0,1,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,0],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,0,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
    [1,1,1,1,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,1,1,1,1,1,1],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,1,1,1,1,1,1,1,1,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,1,1,1,1,1,0,0],
    [1,1,1,1,1,0,1,1,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]
    ]
}

getPixelMapFromId = function(img) {
    var canvas;
    if(!canvas) {
        canvas = document.createElement('canvas');
        canvas.width = 170;
        canvas.height = 50;
        canvas.getContext('2d').drawImage(img, 0, 0, 170, 50);
    }
    var pixelMap = [];
    for (var i = 0; i < 50; i++) {
        var temp = [];
        for (var k = 0; k < 170; k++) {
            temp.push(Boolean(canvas.getContext('2d').getImageData(k, i, 1, 1).data[3]) ? 1 : 0);
        };
        pixelMap.push(temp);
    };
    return pixelMap;
};

function skip(start, end, y) {
    var flag = 0;
    for (var i = 0; i < start.length; i++) {
        if (y >= start[i] && y <= end[i]) {
            flag = 1;
            break;
        }
    }
    return flag;
};

function match_mask(rx, ry, image, mask) {
    var flag = 1;
    var breakflag = 0;
    var height = mask.length;
    var width = mask[0].length;
    var count = 0
    for (var x = 0; x < height; x++) {
        for (var y = 0; y < width; y++) {
            try {
                if (mask[x][y] == 1) {
                    if (image[rx+x][ry+y] == 1) {
                        count = count + 1;
                        continue;
                    }
                    else {
                        flag = 0;
                        breakflag = 1;
                        break;
                    }
                }
                else {
                    continue;
                }
            }
            catch(e) {
                flag = 0;
                breakflag = 1;
                break;
            }
        }
        if(breakflag) {
            break;
        }
    }
    if (count == 0){
        flag = 0;
    }
    return flag;
}

var getCaptcha = function(img) {
    skipstart = [];
    skipend = [];
    sorter = [];
    captcha = [];
    console.log(img.length);
    console.log(img[0].length);
    for(var k in keys) {
        mask = keys[k];
        f = 0;
        for (x = 0; x < img.length; ++x) {
            for (y = 0; y < img[0].length; ++y) {
                if (skip(skipstart, skipend, y))
                    continue;
                else {
                    if (match_mask(x, y, img, mask)) {
                        skipstart.push(y);
                        skipend.push(y + mask[0].length - 2);
                        sorter.push(y);
                        captcha[y]=k;
                        f = f + 1;
                    }
                }
            }
        }
        if (f == 5)
            break;
    }
    var res = "";
    for (var i = 0; i < captcha.length; i++) {
        if(captcha[i]!=null) {
            res = res + captcha[i];
        }
    }
    return res;
};
        
function prettyPrint(arr) {
    var s = "";
    for (var i = 0; i < arr.length; i++) {
        var temp = arr[i];
        for (var k = 0; k < temp.length; k++) {
            s = s + temp[k];
        };
        s = s + "\n";
    };
    console.log(s);
}

function addCredits() {
    if(document.getElementById("credit"))
    {}
    else
    {
        
        var para = document.createElement("P");
        var aTag1 = document.createElement('a');
        aTag1.setAttribute('href',"https://github.com/karthikb351/AutoCaptcha-for-IRCTC");
        aTag1.innerHTML = "AutoCaptcha";
        aTag1.style.cssText="font-size: 10px;";
        var t = document.createTextNode(" - with ♥, ");
        var aTag2 = document.createElement('a');
        aTag2.setAttribute('href',"https://twitter.com/karthikb351");
        aTag2.innerHTML = "Karthik Balakrishnan";
        aTag2.style.cssText="font-size: 10px;";
        para.style.cssText=" font-size: 10px; text-align: center; margin-top: 0px; ";
        para.setAttribute("id", "credit");
        para.appendChild(aTag1);
        para.appendChild(t);
        para.appendChild(aTag2);
        if(isLogin()) {
            var textbox = document.getElementById("cimage");
            textbox.parentElement.appendChild(para);
        }
        else {
            var textbox = document.getElementById("j_captcha");
            textbox.parentNode.insertBefore(para, textbox.nextSibling);

        }
    }
}


function loaded() {

    console.log("AutoCaptcha for IRCTC");
    if(isLogin()) {
    var img = document.getElementById('cimage');
    }
    else {

        var img = document.getElementById('bkg_captcha');
    }
    var startTime=new Date().getTime();

    var pixMap=getPixelMapFromId(img);
    var captcha=getCaptcha(pixMap);
    var endTime=new Date().getTime();
    if(captcha.length==5)
    {
        console.info("Parsed Captcha "+captcha+" in "+(endTime-startTime)+" milliseconds");
        var textbox = document.getElementsByName('j_captcha')[0];
        textbox.value=captcha;
        addCredits();
    }
    else
    {
        console.warn("Error");
    }

    console.log("Made with ♥, Karthik Balakrishnan");
    console.log("http://github.com/karthikb351/AutoCaptcha-for-IRCTC");
}

function isLogin() {
    return window.location.href.indexOf("loginHome")>-1;
}

if(isLogin()) {
    var img = document.getElementById('cimage');
    var changeButton = document.getElementById("refresh");
}
else {
    var img = document.getElementById('bkg_captcha');
    var changeButton = document.getElementById("addPassengerForm:refresh_captcha_image");
}

if (img.complete) {
    loaded();
} else {
    img.addEventListener('load', loaded);
}
changeButton.addEventListener("click", function(){
    img.onload = function(){
       loaded();         
    };
});